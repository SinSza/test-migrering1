on:
  push:
    branches: [master]
    paths:
      - 'src/**'
  pull_request:

env:
  IMAGE_REG: ghcr.io
  IMAGE_REPO: benc-uk/python-demoapp

jobs:
  test:
    name: 'Tests & Linting'
    runs-on: ubuntu-latest
    steps:
      - name: 'Checkout'
        uses: actions/checkout@v2

      # Set up Python environment and install dependencies
      - name: 'Set up Python'
        uses: actions/setup-python@v2
        with:
          python-version: '3.12'  # Ensure you use the correct version of Python

      - name: 'Install dependencies'
        run: |
          python -m venv .venv
          . .venv/bin/activate
          pip install --upgrade pip
          pip install flake8 importlib_metadata==4.8.0  # Ensure the correct version of importlib_metadata

      - name: 'Run linting'
        run: |
          . .venv/bin/activate
          make lint

      - name: 'Run tests'
        run: make test-report

      - name: 'Upload test results'
        uses: actions/upload-artifact@v4
        if: ${{ always() && !env.ACT }}
        with:
          name: test-results
          path: ./test-results.xml

      - name: 'Publish test results'
        uses: EnricoMi/publish-unit-test-result-action@v1
        if: ${{ always() && !env.ACT }}
        with:
          files: test-results.xml

  build:
    name: 'Build & Push Image'
    needs: test
    runs-on: ubuntu-latest
    steps:
      - name: 'Checkout'
        uses: actions/checkout@v2

      - name: 'Create datestamp image tag'
        run: sudo echo "IMAGE_TAG=$(date +%d-%m-%Y.%H%M)" >> $GITHUB_ENV

      - name: 'Docker build image'
        run: make image

      - name: 'Push to container registry'
        if: github.ref == 'refs/heads/master' && github.event_name == 'push'
        run: |
          echo ${{ secrets.GITHUB_TOKEN }} | docker login $IMAGE_REG -u $GITHUB_ACTOR --password-stdin
          make push

      - name: 'Trigger AKS release pipeline'
        if: github.ref == 'refs/heads/master'
        uses: benc-uk/workflow-dispatch@v1
        with:
          workflow: 'CD Release - AKS'
          token: ${{ secrets.GH_PAT }}
          inputs: '{ "IMAGE_TAG": "${{ env.IMAGE_TAG }}" }'

      - name: 'Trigger Azure web app release pipeline'
        if: github.ref == 'refs/heads/master'
        uses: benc-uk/workflow-dispatch@v1
        with:
          workflow: 'CD Release - Webapp'
          token: ${{ secrets.GH_PAT }}
          inputs: '{ "IMAGE_TAG": "${{ env.IMAGE_TAG }}" }'
